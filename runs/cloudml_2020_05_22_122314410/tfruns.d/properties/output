
> library(keras)

> library(here)

> library(cloudml)

> generator <- image_data_generator(rescale = 1/255, 
+     validation_split = 0.2)

> train <- flow_images_from_directory(directory = gs_data_dir_local("gs://unil-dp-project/data/train"), 
+     generator = generator, target_size = c( .... [TRUNCATED] 

> valid <- flow_images_from_directory(directory = gs_data_dir_local("gs://unil-dp-project/data/train"), 
+     generator = generator, target_size = c( .... [TRUNCATED] 

> model_base <- application_vgg16(include_top = FALSE, 
+     weights = "imagenet", input_shape = c(200, 300, 3))

> freeze_weights(model_base)

> model <- keras_model_sequential() %>% model_base %>% 
+     layer_flatten() %>% layer_dense(units = 200, activation = "relu", 
+     ) %>% layer_den .... [TRUNCATED] 

> model %>% compile(optimizer = optimizer_rmsprop(lr = 1e-05), 
+     loss = loss_categorical_crossentropy, metric = "accuracy")

> model %>% fit_generator(generator = train, steps_per_epoch = train$n/train$batch_size, 
+     epochs = 100, callbacks = callback_early_stopping(pati .... [TRUNCATED] 
